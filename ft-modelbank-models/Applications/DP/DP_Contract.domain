# UTF-8
/* Creating of Accu Decu contracts */
Domain DP_Contract
    @t24:i (module=DP)
    @java:Package (value=com.temenos.t24.datamodel.dp.dp_contract)
namespace "http://www.temenos.com/t24/DP_Contract"
metamodelVersion 1.30.6
Classes {
/* SY.ACCU.DECU is the transaction processing application used for booking accumulator/decumulator contracts.

Accumulators are structured products that allow investors to purchase shares at a pre-determined strike price, which is at a discount to the current stock price. An investor purchases (accumulates), a fixed quantity of an underlying share at the strike price, on each trading day of the investment period.

Decumulators on the other hand, are structured products that allow investors to sell a fixed quantity of an underlying share at a pre-determined strike price, on each trading day of the investment period. This forward price is set at a premium to the initial spot price of the underlying share.

Accumulators and Decumulators are structured with a knock-out feature. This means that they can be early terminated when the price of the underlying share closes at above/below a pre-determined barrier price (also known as knock-out price which is set below the initial spot price).
When the price of the underlying share closes at above or below the pre-determined barrier price, a knock-out event is deemed to have occurred. The shares are accrued on a daily basis. Settlement of aggregate units occurs regularly on pre-determined settlement dates.

Apart from being the input application for recording accumulator/decumulator contracts, the SY.ACCU.DECU application also tracks the lifecycle of the contract from inception to its termination.
Termination of the contract could occur  when the contractually agreed maturity date is reached or through various exit triggers such as 'Knock Out' or 'Unwind'. The exit triggers for the contract is also updated within the SY.ACCU.DECU application. */
    SY_ACCU_DECU
        @i18n:Description (en="")
        @t24:i (t24Name=SY.ACCU.DECU, level=F, type=H, additionalInfo="NOH OEU UNP", allowedFunctions="A C D E I L P Q R S", localRefApplicationSysNo=191.0, localRefAllowed=true)
    {
        /* This field will hold the date untill which the nominal is accrued. */
        ACCRUED_UNTIL : T24BusinessTypes:D
            @i18n:Label (en="Accrued Until")
            @i18n:Tooltip (en="Accrued Until")
            @t24:i (align=R, inputBehaviour=N, maxLength=11, sysNumber=106.0, core=true, t24Name=ACCRUED.UNTIL, mandatory=false)
        /* This field can be used to store an alternate reference for the contract. This would be especially useful, when the contract is sourced from an external system. The external system reference can be updated here. */
        ALTERNATE_REF : T24BusinessTypes:A
            @i18n:Label (en="Alternate Reference")
            @i18n:Tooltip (en="Alternate Reference")
            @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=56.0, core=true, t24Name=ALTERNATE.REF, mandatory=false)
        AUDITOR_CODE : T24BusinessTypes:A
            @i18n:Label (en="Auditor Code")
            @i18n:Tooltip (en="Auditor Code")
            @t24:i (align=L, inputBehaviour=E, maxLength=16, sysNumber=201.0, core=true, t24Name=AUDITOR.CODE, mandatory=false)
        AUDIT_DATE_TIME : T24BusinessTypes:RELTIME
            @i18n:Label (en="Audit Date Time")
            @i18n:Tooltip (en="Date and time when record was audited")
            @t24:i (align=L, inputBehaviour=E, maxLength=15, sysNumber=202.0, core=true, t24Name=AUDIT.DATE.TIME, mask="RDD DD  DD ##:##", mandatory=false)
        AUTHORISER : T24BusinessTypes:A
            @i18n:Label (en=Authoriser)
            @i18n:Tooltip (en="Indicates the User who Authorises the record")
            @t24:i (align=L, inputBehaviour=N, maxLength=100, sysNumber=198.0, core=true, t24Name=AUTHORISER, mandatory=false)
/* Accumulator/Decumulator contracts are booked as two transactions. The Client transacts with the bank (dealer book). The bank then covers or hedges this position by entering into a back to back transaction with the counterparty.
The reference of the back to back transaction can be stored in this field. */
        B2B_REFERENCE : T24BusinessTypes:A
            @i18n:Label (en="B2B Reference")
            @i18n:Tooltip (en="Back to Back reference")
            @t24:i (align=L, inputBehaviour=I, maxLength=16, sysNumber=58.0, core=true, t24Name=B2B.REFERENCE, mandatory=false)
        /* This field will be mapped to SWIFT payment message (MT202) */
        BEN_ACCT : T24BusinessTypes:A
            @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=170.0, core=true, t24Name=BEN.ACCT, mandatory=false)
        BEN_ADD -> byValue DP_Contract:SY_ACCU_DECU__BEN_ADD *
            @t24:i (t24Name=BEN.ADD)
        /* This field will be mapped to SWIFT payment message (MT202) */
        BEN_BANK -> ST_Customer:CUSTOMER
            @i18n:Label (en="Beneficiary Bank")
            @i18n:Tooltip (en="Specifies the Bank which is the ultimate receiver")
            @t24:i (align=R, inputBehaviour=I, maxLength=10, sysNumber=168.0, core=true, businessType=CUS, t24Name=BEN.BANK, mandatory=false)
        /* If BLOCK option is chosen in BLOCK.FUNDS, this field will store the ID of AC.LOCKED.EVENTS generated. */
        BLOCKED_REF_AC : T24BusinessTypes:A
            @t24:i (align=L, inputBehaviour=I, maxLength=16, sysNumber=44.0, core=true, t24Name=BLOCKED.REF.AC, mandatory=false)
        /* This field will hold the funding account which would be used to effect the block. */
        BLOCK_ACCOUNT -> AC_AccountOpening:ACCOUNT
            @t24:i (align=R, inputBehaviour=I, maxLength=36, sysNumber=41.0, core=true, businessType=ACC, t24Name=BLOCK.ACCOUNT, typeModifiers="ï£»27", mandatory=false)
        /* This field total amount of cash that needs to be blocked. */
        BLOCK_AMOUNT : T24BusinessTypes:AMT
            @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=40.0, core=true, t24Name=BLOCK.AMOUNT, mandatory=false)
/* For accumulator contracts, where there is a forward dated obligation to purchase the underlying security at periodic intervals, a cash block might be required to ensure availability of sufficient funds.
The funds can be blocked by placing a cash block in the account or by moving the funds to a different account. This field will be used indicate the preferred action.
If it is set to BLOCK then the value in BLOCK.AMOUNT will be blocked by creating a record in AC.LOCKED.EVENTS or if the field is set to DEBIT, then entries will be raised to debit the BLOCK.AMOUNT from BLOCK.ACCOUNT and to credit it to CREDIT.ACCOUNT.
If the field is set to null neither blocking nor debiting happens. Once the AC.LOCKED.EVENT ID is generated in BLOCK.REF.AC, fields from BLOCK.FUNDS to BLOCK.REF.AC cannot be amended. */
        BLOCK_FUNDS : DP_Contract:SY_ACCU_DECU__BLOCK_FUNDS
            @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=39.0, core=true, t24Name=BLOCK.FUNDS, mandatory=false)
        /* This field will hold the end date of the cash block. */
        BLOCK_UNTIL_AC : T24BusinessTypes:D
            @t24:i (align=R, inputBehaviour=I, maxLength=11, sysNumber=43.0, core=true, t24Name=BLOCK.UNTIL.AC, mandatory=false)
/* This field holds the trigger for calculating the cash settlement amount. Once the market price is keyed in at the time of fixing, and this field needs to be set to 'Yes', to trigger the  system to calculate the settlement amount.
This calcualtion would happen during the validation/commit of the contract and this flag would be reset. if recalculation is required then , this flag needs to be set to "Yes" again. This settlement amount calculated pertains only to the current fixing period. */
        CALC_SETTLE_AMT : DP_Contract:SY_ACCU_DECU__CALC_SETTLE_AMT
            @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=160.0, core=true, t24Name=CALC.SETTLE.AMT, mandatory=false)
/* This field would accept a region which will be referred for building the fixing schedule, working out the total number of working days. The same calendar would be used for the accrual process
Validation Rules:
Must be the ID of a valid REGION file record. */
        CALENDAR -> ST_Config:REGION
            @t24:i (align=L, inputBehaviour=I, maxLength=4, sysNumber=163.0, core=true, businessType=A, t24Name=CALENDAR, mandatory=false)
        CHGS_RESERVED_1 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=154.0, core=true, t24Name=CHGS.RESERVED.1, mandatory=false)
        CHGS_RESERVED_10 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=145.0, core=true, t24Name=CHGS.RESERVED.10, mandatory=false)
        CHGS_RESERVED_11 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=143.0, core=true, t24Name=CHGS.RESERVED.11, mandatory=false)
        CHGS_RESERVED_12 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=142.0, core=true, t24Name=CHGS.RESERVED.12, mandatory=false)
        CHGS_RESERVED_13 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=141.0, core=true, t24Name=CHGS.RESERVED.13, mandatory=false)
        CHGS_RESERVED_14 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=140.0, core=true, t24Name=CHGS.RESERVED.14, mandatory=false)
        CHGS_RESERVED_15 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=139.0, core=true, t24Name=CHGS.RESERVED.15, mandatory=false)
        CHGS_RESERVED_16 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=138.0, core=true, t24Name=CHGS.RESERVED.16, mandatory=false)
        CHGS_RESERVED_17 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=137.0, core=true, t24Name=CHGS.RESERVED.17, mandatory=false)
        CHGS_RESERVED_18 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=136.0, core=true, t24Name=CHGS.RESERVED.18, mandatory=false)
        CHGS_RESERVED_19 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=135.0, core=true, t24Name=CHGS.RESERVED.19, mandatory=false)
        CHGS_RESERVED_2 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=153.0, core=true, t24Name=CHGS.RESERVED.2, mandatory=false)
        CHGS_RESERVED_20 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=134.0, core=true, t24Name=CHGS.RESERVED.20, mandatory=false)
        CHGS_RESERVED_3 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=152.0, core=true, t24Name=CHGS.RESERVED.3, mandatory=false)
        CHGS_RESERVED_4 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=151.0, core=true, t24Name=CHGS.RESERVED.4, mandatory=false)
        CHGS_RESERVED_5 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=150.0, core=true, t24Name=CHGS.RESERVED.5, mandatory=false)
        CHGS_RESERVED_6 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=149.0, core=true, t24Name=CHGS.RESERVED.6, mandatory=false)
        CHGS_RESERVED_7 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=148.0, core=true, t24Name=CHGS.RESERVED.7, mandatory=false)
        CHGS_RESERVED_8 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=147.0, core=true, t24Name=CHGS.RESERVED.8, mandatory=false)
        CHGS_RESERVED_9 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=146.0, core=true, t24Name=CHGS.RESERVED.9, mandatory=false)
        /* Contract currency is captured in this field. The Security currency of underlying would be defaulted if this field is left blank. */
        CONTRACT_CCY -> ST_CurrencyConfig:CURRENCY
            @i18n:Label (en="Contract Ccy")
            @i18n:Tooltip (en="Identifies the currency of the contract")
            @t24:i (align=L, inputBehaviour=F, maxLength=3, sysNumber=16.0, core=true, businessType=CCY, t24Name=CONTRACT.CCY, mandatory=false)
        /* AD VALOREN number assigned to this contract can be updated in this field. */
        CONTRACT_IDENTIFIER : T24BusinessTypes:A
            @i18n:Label (en="Contract Identifier")
            @i18n:Tooltip (en="Contract Identifier")
            @t24:i (align=L, inputBehaviour=I, maxLength=15, sysNumber=5.0, core=true, t24Name=CONTRACT.IDENTIFIER, mandatory=false)
/* The status of the contract is updated in this field. When the contract is created , the status will be  'ACTIVE',  subsequently  as the contract undergoes various life cycle events, the status is updated as below.
ACTIVE - The  contract is active.
MATURED - The  contract is matured. i.e. the contract has completed its full life cycle.
KNOCKOUT - The contract is knocked out, i.e. the knock out barrier price is breached.
UNWOUND - The contract is terminated early - before the maturity date.
NOVATED - The contract is novated, i.e the position is transfered and the contract is terminated.

No change field if SUPPRESS.UNDERLYING is set to 'No'. */
        CONTRACT_STATUS : DP_Contract:SY_ACCU_DECU__CONTRACT_STATUS
            @i18n:Label (en="Contract Status")
            @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=4.0, core=true, t24Name=CONTRACT.STATUS, mandatory=false)
/* The counterparty for the contract is  updated in this field. In the client trade, COUNTERPARTY would be the dealer book in the client transaction and it would be the external counterparty for the back to back or counterparty trade.
The counterparty should be defined in both CUSTOMER.SECURITY and DX.CUSTOMER. No change field if SUPPRESS.UNDERLYING is set to 'No'. */
        COUNTERPARTY -> ST_Customer:CUSTOMER required
            @i18n:Label (en=Counterparty)
            @i18n:Tooltip (en="Counterparty with whom the deal is made")
            @t24:i (align=R, inputBehaviour=I, maxLength=10, sysNumber=47.0, core=true, businessType=CUS, t24Name=COUNTERPARTY, mandatory=true)
/* Defaults the Account over which financial entries relating to the counterparty will be posted.
No change field if SUPPRESS.UNDERLYING is set to 'No'. */
        COUNTERPARTY_ACC : T24BusinessTypes:ANT
            @t24:i (align=L, inputBehaviour=I, maxLength=16, sysNumber=49.0, core=true, t24Name=COUNTERPARTY.ACC, mandatory=false)
/* An Accumulator/Decumulator contract is generally booked as two separate transaction legs. Customer transacts with the bank (Dealer book) -  the bank covers or hedges this position  by a market side transaction.
Setting this field to 'Yes' indicates that this is a market side transaction. This field is used for reporting purposes. */
        COUNTERPARTY_TRADE : DP_Contract:SY_ACCU_DECU__COUNTERPARTY_TRADE
            @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=7.0, core=true, t24Name=COUNTERPARTY.TRADE, mandatory=false)
/* This field will hold the value that decides how the nominal blocking should happen.
Validation Rules:
NOCHANGE field
Allowed values:
FULLY.COVERED       - Security position blocking will happen for the total units for DECUMULATOR contract. Allows manual input of positions that are to be blocked
UNCOVERED           - Security position cannot be blocked
PARTIALLY.COVERED   - User manually enters the quantity that are to be blocked. */
        COVERED_CONTRACT : DP_Contract:SY_ACCU_DECU__COVERED_CONTRACT
            @t24:i (align=L, inputBehaviour=F, maxLength=35, sysNumber=164.0, core=true, t24Name=COVERED.CONTRACT, mandatory=false)
        CO_CODE -> ST_CompanyCreation:COMPANY
            @i18n:Label (en=Company)
            @t24:i (align=L, inputBehaviour=N, maxLength=11, sysNumber=199.0, core=true, businessType=A, t24Name=CO.CODE, mask="R##-###-####", mandatory=false)
/* This field will hold the portfolio of the counterparty. If portfolio exist for the counterparty, then this field will be defaulted with the first portfolio of the counterparty.
No change field if SUPPRESS.UNDERLYING is set to 'No'. */
        CPARTY_PORTFOLIO -> SC_ScoPortfolioMaintenance:SEC_ACC_MASTER
            @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=48.0, core=true, businessType=SAM, t24Name=CPARTY.PORTFOLIO, mandatory=false)
        /* This field will be mapped to SWIFT payment message (MT202) */
        CPTY_ACCT : T24BusinessTypes:A
            @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=175.0, core=true, t24Name=CPTY.ACCT, mandatory=false)
        CPTY_ADD -> byValue DP_Contract:SY_ACCU_DECU__CPTY_ADD *
            @t24:i (t24Name=CPTY.ADD)
/* This field will store the fee amount credited to counterparty.
Fee amount entered in existing field FEE.AMT will be debited from customer and credited to PL/suspense category account.Fee entered in CPTY.FEE.AMT will be debited from PL/suspense category account and credited to the counterparty.
This field is applicable only for agency booking model contracts. */
        CPTY_FEE_AMT : T24BusinessTypes:AMT
            @t24:i (align=R, inputBehaviour=F, maxLength=19, sysNumber=111.0, core=true, t24Name=CPTY.FEE.AMT, typeModifiers="-ï£»108ï£»D", mandatory=false)
        /* Technical use. Reserved for future */
        CPTY_NET_AMT : T24BusinessTypes:AMT
            @t24:i (align=R, inputBehaviour=N, maxLength=19, sysNumber=155.0, core=true, t24Name=CPTY.NET.AMT, mandatory=false)
        /* This field will be mapped to SWIFT payment message (MT202) */
        CPTY_NO -> ST_Customer:CUSTOMER
            @t24:i (align=R, inputBehaviour=I, maxLength=10, sysNumber=173.0, core=true, businessType=CUS, t24Name=CPTY.NO, mandatory=false)
/* This field will store the premium amount debited from/credited to the counterparty.
Debit or Credit from counterparty will be decided based on the field PREMIUM.PAY.RECEIVE set
This field is applicable only for agency booking model contracts. */
        CPTY_PREM_AMT : T24BusinessTypes:AMT
            @t24:i (align=R, inputBehaviour=F, maxLength=19, sysNumber=127.0, core=true, t24Name=CPTY.PREM.AMT, mandatory=false)
        /* If the funds are to be moved to a separate account, this account is specified here. */
        CREDIT_ACCOUNT -> AC_AccountOpening:ACCOUNT
            @i18n:Label (en="Credit Acct")
            @t24:i (align=L, inputBehaviour=I, maxLength=36, sysNumber=42.0, core=true, businessType=ANT, t24Name=CREDIT.ACCOUNT, mandatory=false)
        CURR_NO : T24BusinessTypes:N
            @i18n:Label (en="Curr No")
            @t24:i (align=R, inputBehaviour=N, maxLength=6, sysNumber=195.0, core=true, t24Name=CURR.NO, mandatory=false)
/* This field records the investor for this contract. For the client trade, this would be the customer, for the counterparty trade, this would be the DEALER.BOOK.
The customer should be defined in both CUSTOMER.SECURITY and DX.CUSTOMER.
No change field if SUPPRESS.UNDERLYING is set to 'No'. */
        CUSTOMER -> ST_Customer:CUSTOMER required
            @i18n:Label (en=Customer)
            @i18n:Tooltip (en="Customer Liability")
            @t24:i (align=R, inputBehaviour=I, maxLength=10, sysNumber=30.0, core=true, businessType=CUS, t24Name=CUSTOMER, mandatory=true)
/* This account will be used to post the accounting entries for the customer. The same account will be also be the default account on the underlying trade created by the system.
The field will be  defaulted  to the Account specified on the Customer's SEC ACC MASTER record, for the CONTRACT CCY or (if no Account in the CONTRACT CCY is specified) to the Customer's first Account on the SEC ACC MASTER record.
No change field if SUPPRESS.UNDERLYING is set to 'No'. */
        CUSTOMER_ACCOUNT : T24BusinessTypes:ANT
            @t24:i (align=L, inputBehaviour=I, maxLength=16, sysNumber=32.0, core=true, t24Name=CUSTOMER.ACCOUNT, mandatory=false)
        /* Technical use. Reserved for future */
        CU_NET_AMT : T24BusinessTypes:AMT
            @i18n:Label (en="Customer Net Amount")
            @t24:i (align=R, inputBehaviour=N, maxLength=19, sysNumber=144.0, core=true, t24Name=CU.NET.AMT, mandatory=false)
/* This field will hold the number of  units(nominal) to be accrued per day. The value should be in multiple of contract size of the underlying DX.CONTRACT.MASTER.
No change field if SUPPRESS.UNDERLYING is set to 'No'. */
        DAILY_UNITS : T24BusinessTypes:NOMAMT required
            @i18n:Label (en="Daily Units")
            @t24:i (align=R, inputBehaviour=I, maxLength=18, sysNumber=22.0, core=true, t24Name=DAILY.UNITS, mandatory=true)
        DATE_TIME -> byValue DP_Contract:SY_ACCU_DECU__DATE_TIME *
            @t24:i (t24Name=DATE.TIME)
        /* Identifies the dealer desk relating to the transaction.  The same value would be used in the underlying option trade as well. */
        DEALER_DESK -> ST_Config:DEALER_DESK
            @i18n:Label (en="Dealer Desk")
            @i18n:Tooltip (en="Specifies the Dealer Desk handling the transaction")
            @t24:i (align=L, inputBehaviour=I, maxLength=2, sysNumber=157.0, core=true, businessType=A, t24Name=DEALER.DESK, mandatory=false)
        /* This defaults from the DX.CONTRACT.MASTER only for dealer book transaction. For contracts with SETTLEMENT.METHOD = 'Cash',  settlement would take place in this currency. */
        DELIVERY_CURRENCY -> ST_CurrencyConfig:CURRENCY
            @i18n:Label (en="Delivery Ccy")
            @t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=61.0, core=true, businessType=CCY, t24Name=DELIVERY.CURRENCY, mandatory=false)
        DEPT_CODE -> ST_Config:DEPT_ACCT_OFFICER
            @i18n:Label (en="Dept Code")
            @t24:i (align=R, inputBehaviour=N, maxLength=6, sysNumber=200.0, core=true, t24Name=DEPT.CODE, mandatory=false)
        /* This free text field and can be used to record the description of the contract. */
        DESCRIPTION : T24BusinessTypes:TEXT
            @i18n:Label (en=Description)
            @i18n:Tooltip (en=Description)
            @t24:i (align=L, inputBehaviour=I, maxLength=100, sysNumber=3.0, core=true, t24Name=DESCRIPTION, mandatory=false)
/* As a prerequisite to transact in Accumulator/Decumulator, a DX.CONTRACT.MASTER needs to be set up. The underlying for this contract will be the instrument (From SECURITY.CODE field).
The contract master id is captured in this field. When the accumulator/Decumulator contract is committed, an DX.TRADE (PUT option for Accumulator, CALL option for decumulator) would be created for this contract.
No change field if SUPPRESS.UNDERLYING is set to 'No'.
Validation Rules:
This field will accept a DX.CONTRACT.MASTER which has security as the only underlying.
This contract should be of type 'Option' and should be set up as a daily maturity contract. */
        DX_CONTRACT_CODE -> DX_Configuration:DX_CONTRACT_MASTER
            @i18n:Label (en="Dx contract Code")
            @i18n:Tooltip (en="Indicates the counterparty of the transaction")
            @t24:i (align=L, inputBehaviour=I, maxLength=12, sysNumber=15.0, core=true, businessType=DXCM, t24Name=DX.CONTRACT.CODE, mandatory=false)
        /* The field will hold the Account from which the fees will be debited. */
        FEE_ACCT -> AC_AccountOpening:ACCOUNT
            @i18n:Label (en="Fee Account")
            @i18n:Tooltip (en="Fee Account")
            @t24:i (align=L, inputBehaviour=F, maxLength=36, sysNumber=110.0, core=true, businessType=ANT, t24Name=FEE.ACCT, mandatory=false)
        /* The field will hold the Fee amount */
        FEE_AMT : T24BusinessTypes:AMT
            @i18n:Label (en="Fee Amount")
            @i18n:Tooltip (en="Fee Amount")
            @t24:i (align=R, inputBehaviour=F, maxLength=19, sysNumber=109.0, core=true, t24Name=FEE.AMT, typeModifiers="-ï£»108ï£»D", mandatory=false)
        /* The field will hold currency in which the fees will be collected */
        FEE_CCY -> ST_CurrencyConfig:CURRENCY
            @i18n:Label (en="Fee Currency")
            @i18n:Tooltip (en="Fee Currency")
            @t24:i (align=L, inputBehaviour=F, maxLength=3, sysNumber=108.0, core=true, businessType=CCY, t24Name=FEE.CCY, mandatory=false)
        FEE_RESERVED_1 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=116.0, core=true, t24Name=FEE.RESERVED.1, mandatory=false)
        FEE_RESERVED_2 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=115.0, core=true, t24Name=FEE.RESERVED.2, mandatory=false)
        FEE_RESERVED_3 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=114.0, core=true, t24Name=FEE.RESERVED.3, mandatory=false)
        FEE_RESERVED_4 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=113.0, core=true, t24Name=FEE.RESERVED.4, mandatory=false)
        FEE_RESERVED_5 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=112.0, core=true, t24Name=FEE.RESERVED.5, mandatory=false)
        FIXING_DATE -> byValue DP_Contract:SY_ACCU_DECU__FIXING_DATE *
            @t24:i (t24Name=FIXING.DATE)
/* Accumulator/Decumulator contracts accrue the underlying security on a daily basis. The accrued units are settled periodically (This periodic settlement is known as fixing).
This settlement frequency is captured in this field. Settlement of shares is effected by a SEC.TRADE transaction. */
        FIXING_FREQUENCY : T24BusinessTypes:FQU
            @i18n:Label (en="Fixing Frequency")
            @i18n:Tooltip (en="Fixing Frequency")
            @t24:i (align=L, inputBehaviour=I, maxLength=17, sysNumber=84.0, core=true, t24Name=FIXING.FREQUENCY, mask="RDDDD DD  DD #####", mandatory=false)
/* When this field is set to YES, if the fixing periods falls in the suspension period then all the nominal accrued until the SUSP.RESET.DATE will be fixed on SUSP.RESET.DATE.
If this field is NO or Null then all the accrued units until the last suspended fixing period will be done on SUSP.RESET.DATE and the remaining accrued units will be added to the next fixing period. */
        FIX_SUSPENSION : DP_Contract:SY_ACCU_DECU__FIX_SUSPENSION
            @i18n:Label (en="Fix Suspension")
            @i18n:Tooltip (en="Fix Suspension")
            @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=83.0, core=true, t24Name=FIX.SUSPENSION, mandatory=false)
/* The leverage (gearing) factor for leveraged contracts is captured in this field. The gearing factor would be applied to accruals on those days where the spot price is below STRIKE.PRICE1 for accumulators , spot price is above the STRIKE.PRICE1 for decumulator contracts.
For example, if the gearing factor is 2 , and the spot price of the underlying is less than the STRIKE.PRICE1 for an accumulator contract on a particular day, then accrual for that day would be 2 times the quantity specified in DAILY.UNITS. */
        GEARING : T24BusinessTypes:N
            @i18n:Label (en=Gearing)
            @i18n:Tooltip (en=Gearing)
            @t24:i (align=R, inputBehaviour=I, maxLength=2, sysNumber=23.0, core=true, t24Name=GEARING, mandatory=false)
        ID -> DP_Contract:SY_ACCU_DECU PK required
            @i18n:Label (en="Transaction Ref")
            @i18n:Tooltip (en="Transaction Reference")
            @t24:i (align=L, inputBehaviour=I, maxLength=16, sysNumber=0.0, core=true, businessType=A, t24Name="@ID", mandatory=true)
        INPUTTER -> byValue DP_Contract:SY_ACCU_DECU__INPUTTER *
            @t24:i (t24Name=INPUTTER)
        INTR_ADD -> byValue DP_Contract:SY_ACCU_DECU__INTR_ADD *
            @t24:i (t24Name=INTR.ADD)
        /* This field will be mapped to SWIFT payment message (MT202) */
        INTR_BANK -> ST_Customer:CUSTOMER
            @t24:i (align=R, inputBehaviour=I, maxLength=10, sysNumber=171.0, core=true, businessType=CUS, t24Name=INTR.BANK, mandatory=false)
/* This field will allow the user the store the price barrier for knock in. Only when this price barrier is breached, the contract becomes effective.If  this field is populated, then accrual would commence only when  KNOCK.IN flag is set.
Price tracking is outside the system, when  the Knock in  barrier is breached, this is indicated by setting the KNOCK.IN flag. */
        KNOCKIN_PRICE : T24BusinessTypes:AMT
            @i18n:Label (en="Knockin Price")
            @i18n:Tooltip (en="Knockin Price")
            @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=20.0, core=true, t24Name=KNOCKIN.PRICE, mandatory=false)
/* This field will allow the user to store the price barrier for knock out. When this price barrier is breached, the contract gets terminated.
Price tracking is outside the system, when  the Knock out  barrier is breached, this is indicated by setting the KNOCK.OUT flag. */
        KNOCKOUT_PRICE : T24BusinessTypes:AMT
            @i18n:Label (en="Knockout Price")
            @i18n:Tooltip (en="Knockout Price")
            @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=21.0, core=true, t24Name=KNOCKOUT.PRICE, mandatory=false)
/* This field is applicable for contracts with knock in feature. The contract becomes effective only when the knock in price barrier is breached. Price tracking is done outside the system, occurrence of knock in event (i.e. breach of knock in price) is indicated to the system by setting this flag to 'Yes'.
Accrual would commence only when this flag is set  to 'Yes' for a knock in contract */
        KNOCK_IN : DP_Contract:SY_ACCU_DECU__KNOCK_IN
            @i18n:Label (en="Knock In")
            @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=62.0, core=true, t24Name=KNOCK.IN, mandatory=false)
        /* The contract gets terminated when the Knock out price barrier is breached. Price tracking is done outside the system, occurrence of the knockout event is indicated to the system by  setting this flag to 'Yes'. */
        KNOCK_OUT : DP_Contract:SY_ACCU_DECU__KNOCK_OUT
            @i18n:Label (en="Knock Out")
            @i18n:Tooltip (en="Knock Out")
            @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=64.0, core=true, t24Name=KNOCK.OUT, mandatory=false)
        /* This field is used to store limit related details. Technical use. */
        LIMIT_DETS : T24BusinessTypes:A
            @t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=166.0, core=true, t24Name=LIMIT.DETS, mandatory=false)
        /* The Limit reference identifying the customer credit line . */
        LIMIT_REF : T24BusinessTypes:LIM
            @i18n:Label (en="Limit Ref")
            @i18n:Tooltip (en="Limit Reference")
            @t24:i (align=L, inputBehaviour=I, maxLength=15, sysNumber=165.0, core=true, t24Name=LIMIT.REF, mandatory=false)
        /* Maturity date is the termination date of the contract.  Maturity date will be defaulted based on TERM and VALUE.DATE */
        MATURITY_DATE : T24BusinessTypes:D
            @i18n:Label (en="Maturity Date")
            @i18n:Tooltip (en="Indicates the Maturity Date of the Transaction")
            @t24:i (align=R, inputBehaviour=F, maxLength=11, sysNumber=12.0, core=true, t24Name=MATURITY.DATE, mandatory=false)
/* This field is applicable for contracts with guaranteed accumulation/Decumulation. For such contracts, even if the contract gets knocked out early in its lifecycle, the investor is guaranteed settlement  of certain units of the underlying.
For example, for an accumulator contract with 12 fixing periods, the accumulation for the first 2 periods could be guaranteed. Even if the contract gets knocked out in the first fixing period, the investor still purchases shares for the first 2 fixing period.
This field holds the number of guaranteed fixing periods applicable for this contract. In this example,  this field will hold the  value 2. */
        MIN_ACCRUAL_PERIOD : T24BusinessTypes:N
            @i18n:Label (en="Minimal Accrual Period")
            @i18n:Tooltip (en="Minimal Accrual Period")
            @t24:i (align=R, inputBehaviour=I, maxLength=3, sysNumber=25.0, core=true, t24Name=MIN.ACCRUAL.PERIOD, mandatory=false)
/* This field will be defaulted from SY.PRODUCT.VARIANT. If SY.PRODUCT.VARIANT is not given, then the value will be defaulted from SY.PRODUCT.DEFINITION, this field can also be amended manually.
If this field is set to YES, then the contract will be knocked out immediately with nominal for the entire minimum accrual period.
If this field is null or set to NO  and the contract gets knocked out within the  MIN.ACCRUAL.PERIOD, then accrual would continue unto the PROTECTED.DATE and the guaranteed units of shares will be settled at that point of time. */
        MIN_PERIOD_KOUT : DP_Contract:SY_ACCU_DECU__MIN_PERIOD_KOUT
            @i18n:Label (en="Minimum Period Knock Out")
            @i18n:Tooltip (en="Minimum Period Knock Out")
            @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=27.0, core=true, t24Name=MIN.PERIOD.KOUT, mandatory=false)
/* This field will hold the notional amount for contract. This would be calculated using the formula  TOTAL.UNITS * STRIKE.PRICE1. Notional amount is denoted in the contract currency.
Off Balance sheet, contingent entries would be posted for this amount. This can be input by the user which would override the calculation done by the system. */
        NOTIONAL_AMT : T24BusinessTypes:AMT
            @i18n:Label (en="Notional Amount")
            @t24:i (align=R, inputBehaviour=F, maxLength=19, sysNumber=53.0, core=true, t24Name=NOTIONAL.AMT, mandatory=false)
        NOVATED_FROM -> ST_Customer:CUSTOMER
            @i18n:Label (en="Novated From")
            @i18n:Tooltip (en="Novated From")
            @t24:i (align=R, inputBehaviour=I, maxLength=10, sysNumber=122.0, core=true, businessType=CUS, t24Name=NOVATED.FROM, mandatory=false)
        NOVATED_TO -> ST_Customer:CUSTOMER
            @i18n:Label (en="Novated To")
            @i18n:Tooltip (en="Novated To")
            @t24:i (align=R, inputBehaviour=I, maxLength=10, sysNumber=123.0, core=true, businessType=CUS, t24Name=NOVATED.TO, mandatory=false)
/* Initially the field would be blank, at the time of novation, depending on the type of novation, the appropriate value should be selected.
Allowed value are 'Internal Novation' 'External Novation'.
Validation Rules:
Input to this field is not allowed if KNOCK.OUT is set or if UNWIND is set to YES or FULL.
Input to this field is not allowed if KNOCK.OUT or UNWIND is set to YES or FULL. */
        NOVATION : DP_Contract:SY_ACCU_DECU__NOVATION
            @i18n:Label (en=Novation)
            @i18n:Tooltip (en=Novation)
            @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=117.0, core=true, t24Name=NOVATION, mandatory=false)
        /* This field holds the effective date of novation. The Accrual would be stopped on this date. Defaults to the current system date. */
        NOVATION_EFF_DATE : T24BusinessTypes:D
            @i18n:Label (en="Novation Effective Date")
            @i18n:Tooltip (en="Novation Effective Date")
            @t24:i (align=R, inputBehaviour=I, maxLength=11, sysNumber=118.0, core=true, t24Name=NOVATION.EFF.DATE, mandatory=false)
        /* This field holds the customer account from which the novation fee will be debited. */
        NOVATION_FEE_ACC : T24BusinessTypes:ANT
            @i18n:Label (en="Novation Fee Account")
            @i18n:Tooltip (en="Novation Fee Account")
            @t24:i (align=L, inputBehaviour=I, maxLength=16, sysNumber=121.0, core=true, t24Name=NOVATION.FEE.ACC, mandatory=false)
        /* This field holds the novation fee amount. */
        NOVATION_FEE_AMT : T24BusinessTypes:AMT
            @i18n:Label (en="Novation Fee Amount")
            @i18n:Tooltip (en="Novation Fee Amount")
            @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=120.0, core=true, t24Name=NOVATION.FEE.AMT, mandatory=false)
        /* This field holds the currency of the novation fee. */
        NOVATION_FEE_CCY -> ST_CurrencyConfig:CURRENCY
            @i18n:Label (en="Novation Fee Currency")
            @i18n:Tooltip (en="Novation Fee Currency")
            @t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=119.0, core=true, businessType=CCY, t24Name=NOVATION.FEE.CCY, mandatory=false)
        /* This field can be used to give the reference of the novated contract */
        NOVATION_REFERENCE : T24BusinessTypes:A
            @i18n:Label (en="Novation Reference")
            @i18n:Tooltip (en="Novation Reference")
            @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=124.0, core=true, t24Name=NOVATION.REFERENCE, mandatory=false)
/* This field holds the option type of the underlying option. This is auto populated based on the PRODUCT.TYPE field.
For ACCUMULATOR contract - the underlying would be a PUT option, for DECUMULATOR contract- the underlying would be  a CALL option. */
        OPTION_TYPE : T24BusinessTypes:N
            @i18n:Label (en="Call or Put")
            @i18n:Tooltip (en="Type of option to be chosen like call or put")
            @t24:i (align=R, inputBehaviour=N, maxLength=0, sysNumber=8.0, core=true, t24Name=OPTION.TYPE, mandatory=false)
        OVERRIDE -> byValue DP_Contract:SY_ACCU_DECU__OVERRIDE *
            @t24:i (t24Name=OVERRIDE)
/* This field will hold the portfolio of the customer for this contract. When left blank, the first portfolio of the CUSTOMER will be defaulted.
No change field if SUPPRESS.UNDERLYING is set to 'No'. */
        PORTFOLIO -> SC_ScoPortfolioMaintenance:SEC_ACC_MASTER
            @i18n:Label (en=Portfolio)
            @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=31.0, core=true, businessType=SAM, t24Name=PORTFOLIO, mandatory=false)
        /* The premium amount will be debited from this account. */
        PREMIUM_ACC : T24BusinessTypes:ANT
            @t24:i (align=L, inputBehaviour=F, maxLength=16, sysNumber=125.0, core=true, t24Name=PREMIUM.ACC, mandatory=false)
        /* This will be the total premium amount that will be collected from the customer for the entire lot. */
        PREMIUM_AMT : T24BusinessTypes:AMT
            @t24:i (align=R, inputBehaviour=F, maxLength=19, sysNumber=52.0, core=true, t24Name=PREMIUM.AMT, mandatory=false)
        /* This field will hold the currency in which premium is specified. Default would be  CONTRACT.CCY */
        PREMIUM_CCY -> ST_CurrencyConfig:CURRENCY
            @i18n:Label (en="Premium Currency")
            @i18n:Tooltip (en="Premium Currency")
            @t24:i (align=L, inputBehaviour=F, maxLength=3, sysNumber=50.0, core=true, businessType=CCY, t24Name=PREMIUM.CCY, mandatory=false)
/* This field will say whether the customer has to receive/pay the premium amount.
Allowed values: PAY,RECEIVE */
        PREMIUM_PAY_RECEIVE : DP_Contract:SY_ACCU_DECU__PREMIUM_PAY_RECEIVE
            @i18n:Label (en="Premium Pay Receive")
            @i18n:Tooltip (en="Premium Pay Receive")
            @t24:i (align=L, inputBehaviour=F, maxLength=35, sysNumber=128.0, core=true, t24Name=PREMIUM.PAY.RECEIVE, mandatory=false)
        /* This field hold the premium per unit of underlying. Premium amount is calculated using the formula TOTAL.UNITS * PREMIUM.PER.LOT */
        PREMIUM_PER_LOT : T24BusinessTypes:AMT
            @i18n:Label (en="Premium Per Lot")
            @i18n:Tooltip (en="Premium Per Lot")
            @t24:i (align=R, inputBehaviour=F, maxLength=19, sysNumber=51.0, core=true, t24Name=PREMIUM.PER.LOT, mandatory=false)
        PREM_PAYMENT_DATE : T24BusinessTypes:D
            @i18n:Label (en="Premium Payment Date")
            @i18n:Tooltip (en="Premium Payment Date")
            @t24:i (align=R, inputBehaviour=F, maxLength=11, sysNumber=126.0, core=true, t24Name=PREM.PAYMENT.DATE, mandatory=false)
        PREM_RESERVED_1 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=133.0, core=true, t24Name=PREM.RESERVED.1, mandatory=false)
        PREM_RESERVED_2 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=132.0, core=true, t24Name=PREM.RESERVED.2, mandatory=false)
        PREM_RESERVED_3 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=131.0, core=true, t24Name=PREM.RESERVED.3, mandatory=false)
        PREM_RESERVED_4 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=130.0, core=true, t24Name=PREM.RESERVED.4, mandatory=false)
        PREM_RESERVED_5 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=129.0, core=true, t24Name=PREM.RESERVED.5, mandatory=false)
        /* This is the price of the underlying security at the time of occurrence of the Knock in event. i.e. This is the price which has breached the knock in price barrier. This is stored for information purposes. */
        PRICE_AT_KNOCK_IN : T24BusinessTypes:AMT
            @i18n:Label (en="Price At Knock In")
            @i18n:Tooltip (en="Price At Knock In")
            @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=63.0, core=true, t24Name=PRICE.AT.KNOCK.IN, mandatory=false)
        /* This is the price of the underlying security at the time of occurrence of the knock out event. This is stored for information purposes. */
        PRICE_AT_KNOCK_OUT : T24BusinessTypes:AMT
            @i18n:Label (en="Price At Knock Out")
            @i18n:Tooltip (en="Price At Knock Out")
            @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=65.0, core=true, t24Name=PRICE.AT.KNOCK.OUT, mandatory=false)
/* This field accepts the following values :
PRINCIPAL - Indicates that the bank is acting as a principal in this transaction.
AGENT     - Indicates that the bank is acting as an agent in this transaction.
Bank's role in the SY contract is recorded here */
        PRINCIPAL_AGENT : DP_Contract:SY_ACCU_DECU__PRINCIPAL_AGENT
            @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=6.0, core=true, t24Name=PRINCIPAL.AGENT, mandatory=false)
/* This field accepts the below values :
ACCMULATOR  - Indicates this is an accumulator contract- the underlying security is accumulated or purchased at periodic intervals.
DECUMULATOR - Indicates this is an decumulator contract - the underlying security is decumulated/sold at periodic intervals. */
        PRODUCT_TYPE : DP_Contract:SY_ACCU_DECU__PRODUCT_TYPE required
            @i18n:Label (en="Product Type")
            @t24:i (align=L, inputBehaviour=F, maxLength=35, sysNumber=1.0, core=true, t24Name=PRODUCT.TYPE, mandatory=true)
        /* This field will be populated with the last date of the MIN.ACCRUAL.PERIOD. For example, if the MIN.ACCRUAL.PERIOD is 2, this field would default to the last day of the second fixing period. */
        PROTECTED_DATE : T24BusinessTypes:D
            @i18n:Label (en="Protected Date")
            @i18n:Tooltip (en="Protected Date")
            @t24:i (align=R, inputBehaviour=I, maxLength=11, sysNumber=26.0, core=true, t24Name=PROTECTED.DATE, mandatory=false)
        /* When this field holds the value as YES, then payment message will be generated */
        PYMT_MSG_REQD : DP_Contract:SY_ACCU_DECU__PYMT_MSG_REQD
            @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=167.0, core=true, t24Name=PYMT.MSG.REQD, mandatory=false)
        RECORD_STATUS : T24BusinessTypes:STAT
            @i18n:Label (en="Record Status")
            @t24:i (align=L, inputBehaviour=N, maxLength=6, sysNumber=194.0, core=true, t24Name=RECORD.STATUS, mandatory=false)
        /* The spot price of the underlying security (at the time of contract booking) is updated in this field. If left blank, the last price from the underlying security would default. */
        REFERENCE_PRICE : T24BusinessTypes:AMT
            @i18n:Label (en="Ref Price")
            @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=17.0, core=true, t24Name=REFERENCE.PRICE, mandatory=false)
        /* This fields holds the remaining units for the contract, at the time of inception the value in this field would be equal to TOTAL.UNITS, subsequently during the life cycle of the contract, the remaining units would be reduced as a result of fixing, unwinding, knock out and novation events. */
        REMAINING_UNITS : T24BusinessTypes:NOMAMT
            @i18n:Label (en="Remaining Units")
            @i18n:Tooltip (en="Remaining Units")
            @t24:i (align=R, inputBehaviour=N, maxLength=18, sysNumber=158.0, core=true, t24Name=REMAINING.UNITS, mandatory=false)
        RESERVED_01 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=190.0, core=true, t24Name=RESERVED.01, mandatory=false)
        RESERVED_02 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=189.0, core=true, t24Name=RESERVED.02, mandatory=false)
        RESERVED_03 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=188.0, core=true, t24Name=RESERVED.03, mandatory=false)
        RESERVED_04 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=187.0, core=true, t24Name=RESERVED.04, mandatory=false)
        RESERVED_05 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=186.0, core=true, t24Name=RESERVED.05, mandatory=false)
        RESERVED_06 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=185.0, core=true, t24Name=RESERVED.06, mandatory=false)
        RESERVED_07 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=184.0, core=true, t24Name=RESERVED.07, mandatory=false)
        RESERVED_08 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=183.0, core=true, t24Name=RESERVED.08, mandatory=false)
        RESERVED_09 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=182.0, core=true, t24Name=RESERVED.09, mandatory=false)
        RESERVED_10 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=181.0, core=true, t24Name=RESERVED.10, mandatory=false)
        RESERVED_11 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=180.0, core=true, t24Name=RESERVED.11, mandatory=false)
        RESERVED_12 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=179.0, core=true, t24Name=RESERVED.12, mandatory=false)
        RESERVED_13 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=178.0, core=true, t24Name=RESERVED.13, mandatory=false)
        RESERVED_14 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=177.0, core=true, t24Name=RESERVED.14, mandatory=false)
        RESERVED_15 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=176.0, core=true, t24Name=RESERVED.15, mandatory=false)
        RESERVED_24 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=105.0, core=true, t24Name=RESERVED.24, mandatory=false)
        RESERVED_25 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=104.0, core=true, t24Name=RESERVED.25, mandatory=false)
        RESERVED_26 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=103.0, core=true, t24Name=RESERVED.26, mandatory=false)
        RESERVED_27 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=102.0, core=true, t24Name=RESERVED.27, mandatory=false)
        RESERVED_28 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=101.0, core=true, t24Name=RESERVED.28, mandatory=false)
        RESERVED_29 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=100.0, core=true, t24Name=RESERVED.29, mandatory=false)
        RESERVED_30 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=99.0, core=true, t24Name=RESERVED.30, mandatory=false)
        RESERVED_31 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=98.0, core=true, t24Name=RESERVED.31, mandatory=false)
        RESERVED_32 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=97.0, core=true, t24Name=RESERVED.32, mandatory=false)
        RESERVED_42 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=46.0, core=true, t24Name=RESERVED.42, mandatory=false)
        RESERVED_43 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=45.0, core=true, t24Name=RESERVED.43, mandatory=false)
        RESERVED_44 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=38.0, core=true, t24Name=RESERVED.44, mandatory=false)
/* This field holds the product risk rating for the contract
This field will be defaulted from SY.MASTER if master linked to the contract
Validation Rules:
Input to this field is derived from EB.LOOKUP table - RISK.LEVEL*(1-10) */
        RISK_LEVEL : DP_Contract:SY_ACCU_DECU__RISK_LEVEL
            @i18n:Label (en="Risk Level")
            @t24:i (align=R, inputBehaviour=I, maxLength=35, sysNumber=162.0, core=true, t24Name=RISK.LEVEL, mandatory=false)
        /* As the contract is settled periodically (which is known as FIXING), the pending units are reduced. The outstanding notional (i.e. unsettled) also gets reduced proportionately. The outstanding notional is updated by the system at each fixing. */
        RUN_NOTIONAL_AMT : T24BusinessTypes:AMT
            @i18n:Label (en="Run Notional Amount")
            @i18n:Tooltip (en="Run Notional Amount")
            @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=54.0, core=true, t24Name=RUN.NOTIONAL.AMT, mandatory=false)
/* The underlying security which is accumulated/decumulated in this contract is captured in this field. Units of this security would be accrued and settled periodically.
No change field if SUPPRESS.UNDERLYING is set to 'No'. */
        SECURITY_CODE -> SC_ScoSecurityMasterMaintenance:SECURITY_MASTER
            @i18n:Label (en="Security No")
            @i18n:Tooltip (en="Indicates a valid Security")
            @t24:i (align=L, inputBehaviour=F, maxLength=12, sysNumber=13.0, core=true, businessType=SEC, t24Name=SECURITY.CODE, mandatory=false)
        SECURITY_POS -> byValue DP_Contract:SY_ACCU_DECU__SECURITY_POS *
            @t24:i (t24Name=SECURITY.POS)
/* This field will indicate how the delivery of the underlying will happen. For dealer book transaction, this field will be defaulted from DX.CONTRACT.MASTER. This can also be changed manually.
Allowed values are PHYSICAL, CASH.
CASH - During the Fixing event, SETTLEMENT.AMOUNT will be settled in DELIVERY.CCY
PHYSICAL - If SETTLEMENT.INSTRUMENT is defined, then SETTLEMENT.INSTRUMENT will be exercised for the SETTL.INSTR.UNITS at SETT.INSTR.PRICE
If SETTLEMENT.INSTRUMENT is not given, then security given in SECURITY.CODE will be exercised for the ACCRUED.UNITS1 at STRIKE.PRICE1. */
        SETTLEMENT_METHOD : DP_Contract:SY_ACCU_DECU__SETTLEMENT_METHOD
            @i18n:Label (en="Setltement Method ")
            @t24:i (align=L, inputBehaviour=F, maxLength=35, sysNumber=55.0, core=true, t24Name=SETTLEMENT.METHOD, mandatory=false)
/* The value given here will be defaulted to PRINCIPAL.AGENT field in the SEC.TRADE generated at time of fixing. The PRINICIPAL.AGENT field  in SEC.TRADE is used for stamp tax calculation.
It is possible that the bank is acting as a principal for the accumulator contract, but have signed a legal agreement with the customer to the effect that the bank will be acting as agent for the fixing transaction. */
        SETTLEMENT_ROLE : DP_Contract:SY_ACCU_DECU__SETTLEMENT_ROLE
            @i18n:Label (en="Settlement Role")
            @i18n:Tooltip (en="Settlement Role")
            @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=156.0, core=true, t24Name=SETTLEMENT.ROLE, mandatory=false)
        SETTLE_INSTRUMENT -> SC_ScoSecurityMasterMaintenance:SECURITY_MASTER
            @i18n:Label (en="Settlement Instrument ")
            @i18n:Tooltip (en="Alternate Settlement Instrument")
            @t24:i (align=L, inputBehaviour=I, maxLength=12, sysNumber=60.0, core=true, businessType=SEC, t24Name=SETTLE.INSTRUMENT, mandatory=false)
        STMT_NOS -> byValue DP_Contract:SY_ACCU_DECU__STMT_NOS *
            @t24:i (t24Name=STMT.NOS)
        /* The STOCK.EXCHANGE in which the security is traded will be defaulted here. */
        STOCK_EXCHANGE -> SC_Config:STOCK_EXCHANGE
            @i18n:Label (en="Stock Exchange")
            @t24:i (align=L, inputBehaviour=F, maxLength=12, sysNumber=14.0, core=true, businessType=S, t24Name=STOCK.EXCHANGE, mandatory=false)
/* The forward price at which the accumulation (purchases) or decumulation (sale) of the underlying would be effected is captured in this field. i.e. this would be the price used for the security settlement.
No change field if SUPPRESS.UNDERLYING is set to 'No'. */
        STRIKE_PRICE1 : T24BusinessTypes:AMT required
            @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=18.0, core=true, t24Name=STRIKE.PRICE1, mandatory=true)
        /* For contracts with dual strike prices, the second strike price can be updated in this field. This field is used for information purposes. */
        STRIKE_PRICE2 : T24BusinessTypes:AMT
            @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=19.0, core=true, t24Name=STRIKE.PRICE2, mandatory=false)
/* If this field is set to 'Yes',  system will not create the underlying transactions when the contract is committed. It is expected that the underlying transactions will be created manually or interfaced from a different system and the contract can be linked to ACCUDECU using SY.DX.REFERENCE.
For such contracts, lifecycle events of the contract such as accrual, fixing etc. should be managed externally (Manually or interfaced from an external system).
If this field is set to 'No', underlying transactions will be created by the system. The lifecycle events of the contract will be processed by the system.
This field will be defaulted from SY.PRODUCT.VARIANT. If SY.PRODUCT.VARIANT is not defined, then the value will be defaulted from SY.PRODUCT.DEFINITION.
The following fields would be "No Change" if SUPPRESS.UNDERLYING field is set to 'No'
VARIANT
TRADEDATE
VALUEDATE
DXCONTRACTCODE
STRIKEPRICE1
CUSTOMER
PORTFOLIO
CUSTOMERACCOUNT
COUNTERPARTY
CPARTYPORTFOLIO
COUNTERPARTYACC
CONTRACTSTATUS
DAILYUNITS */
        SUPPRESS_UNDERLYING : DP_Contract:SY_ACCU_DECU__SUPPRESS_UNDERLYING
            @i18n:Label (en="Suppress Underlying")
            @i18n:Tooltip (en="Suppress Underlying")
            @t24:i (align=L, inputBehaviour=F, maxLength=35, sysNumber=24.0, core=true, t24Name=SUPPRESS.UNDERLYING, mandatory=false)
/* Trading in the underlying security can be suspended due to various reasons. Trading can be suspended as a result of a Corporate Action. In such situations, the accrual for the accumulator /decumulator contract also needs to be suspended.
This is indicated to the system by setting this field to 'Yes'.  Once set, accrual and fixing would be suspended between SUSPENSION.DATE and SUSP.RESET.DATE. */
        SUSPEND_ACCRUAL : DP_Contract:SY_ACCU_DECU__SUSPEND_ACCRUAL
            @i18n:Label (en="Suspend Accrual")
            @i18n:Tooltip (en="Suspend Accrual")
            @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=80.0, core=true, t24Name=SUSPEND.ACCRUAL, mandatory=false)
        /* This field will be updated by the system if the trading is suspended in the stock exchange of the underlying equity. */
        SUSPEND_BY_SYS : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=0, sysNumber=159.0, core=true, t24Name=SUSPEND.BY.SYS, mandatory=false)
        /* Accrual/Fixing suspension start date. */
        SUSPENSION_DATE : T24BusinessTypes:D
            @i18n:Label (en="Suspension Date")
            @i18n:Tooltip (en="Suspension Date")
            @t24:i (align=R, inputBehaviour=I, maxLength=11, sysNumber=81.0, core=true, t24Name=SUSPENSION.DATE, mandatory=false)
        /* Accrual/Fixing suspension end date. */
        SUSP_RESET_DATE : T24BusinessTypes:D
            @i18n:Label (en="Suspension Reset Date")
            @i18n:Tooltip (en="Suspension Reset Date")
            @t24:i (align=R, inputBehaviour=I, maxLength=11, sysNumber=82.0, core=true, t24Name=SUSP.RESET.DATE, mandatory=false)
/* This is the  unique reference that will bind the structure (ACCUDECU contract) with all its underlying transactions.
For example, when an accumulator contract is created, the underlying option is created through DX.TRADE. As the contract gets fixed (periodic settlement), the settlement happens through a SEC.TRADE transaction. All three transactions , SY.ACCU.DECU contract, DX.TRADE and SEC.TRADE will be updated  with this reference.
This reference can be input by user, if left blank, the contract id would be populated */
        SY_DX_REFERENCE : T24BusinessTypes:A
            @i18n:Label (en="SY DX Reference")
            @i18n:Tooltip (en="SY DX Reference")
            @t24:i (align=L, inputBehaviour=I, maxLength=50, sysNumber=57.0, core=true, t24Name=SY.DX.REFERENCE, mandatory=false)
/* This field will hold the SY.MASTER linked to the contract
Validation Rules:
NOCHANGE field
Must be the ID of a valid SY.MASTER file record. */
        SY_MASTER -> SY_Config:SY_MASTER
            @t24:i (align=L, inputBehaviour=F, maxLength=12, sysNumber=161.0, core=true, businessType=SYSM, t24Name=SY.MASTER, mandatory=false)
        TAP_EVENT_ID : T24BusinessTypes:A
            @t24:i (align=L, inputBehaviour=I, maxLength=50, sysNumber=191.2, core=false, t24Name=TAP.EVENT.ID, mandatory=false)
        TAP_REF_ID : T24BusinessTypes:A
            @t24:i (align=L, inputBehaviour=I, maxLength=50, sysNumber=191.1, core=false, t24Name=TAP.REF.ID, mandatory=false)
        /* This field holds the tenor of the contract. The Tenor can be expressed as a number of Days, Weeks or Months. Input in this field has to be in the format nnnD, nnnM or nnnW where nnn is represents the numeric component. D signifies Days (working days) ,M signifies Months and W signifies Weeks */
        TERM : T24BusinessTypes:A
            @i18n:Label (en=Term)
            @i18n:Tooltip (en="period of time by which the amount must be repaid")
            @t24:i (align=L, inputBehaviour=F, maxLength=4, sysNumber=11.0, core=true, t24Name=TERM, mandatory=false)
/* This field will hold the maximum number of underlying security  that could be settled/delivered by this contract. The value will be calculated based on the following formula DAILY.UNITS * TOT.WORK.DAYS * GEARING.
The underlying option would be created for these many units. */
        TOTAL_UNITS : T24BusinessTypes:NOMAMT
            @i18n:Label (en="Total Units")
            @t24:i (align=R, inputBehaviour=N, maxLength=18, sysNumber=29.0, core=true, t24Name=TOTAL.UNITS, mandatory=false)
        /* The total number of working days(using the holiday calendar of STOCK.EXCHANGE) between value date and maturity date is calculated and stored in this field. If the contract does not gets knocked out, the accrual would happen for these many days. */
        TOT_WORK_DAYS : T24BusinessTypes:N
            @i18n:Label (en="Total Working Days")
            @i18n:Tooltip (en="Total Working Days")
            @t24:i (align=R, inputBehaviour=I, maxLength=5, sysNumber=28.0, core=true, t24Name=TOT.WORK.DAYS, mandatory=false)
/* Holds the trade date of the contract. Trade date cannot be forward dated and should fall between the FIRST.DATE and LAST.DATE of the corresponding product definition record.
No change field if SUPPRESS.UNDERLYING is set to 'No'. */
        TRADE_DATE : T24BusinessTypes:D
            @i18n:Label (en="Trade Date")
            @t24:i (align=R, inputBehaviour=I, maxLength=11, sysNumber=9.0, core=true, t24Name=TRADE.DATE, mandatory=false)
        /* This field will hold SY.TRANSACTION ID. */
        TRANS_REFERENCE : T24BusinessTypes:A
            @i18n:Label (en="Transaction Ref")
            @t24:i (align=L, inputBehaviour=N, maxLength=16, sysNumber=107.0, core=true, t24Name=TRANS.REFERENCE, mandatory=false)
        /* This field will hold the reference of the underlying contract (DX.TRADE ID). */
        UNDERLYING_REF : T24BusinessTypes:A
            @i18n:Label (en="Underlying Reference")
            @i18n:Tooltip (en="Underlying Reference")
            @t24:i (align=L, inputBehaviour=I, maxLength=16, sysNumber=59.0, core=true, t24Name=UNDERLYING.REF, mandatory=false)
        UNWIND -> byValue DP_Contract:SY_ACCU_DECU__UNWIND *
            @t24:i (t24Name=UNWIND)
        UNWIND_RESERVED_1 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=79.0, core=true, t24Name=UNWIND.RESERVED.1, mandatory=false)
        UNWIND_RESERVED_2 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=78.0, core=true, t24Name=UNWIND.RESERVED.2, mandatory=false)
        UNWIND_RESERVED_3 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=77.0, core=true, t24Name=UNWIND.RESERVED.3, mandatory=false)
/* Date on which the accrual of shares commences. Defaults from the trade date if not input. Value date cannot be earlier than the trade date.
Accrual will start from value date of the contract, if knock in price is not given. If knock in price is given then accrual will start from the day on which KNOCK.IN is set.
No change field if SUPPRESS.UNDERLYING is set to 'No'. */
        VALUE_DATE : T24BusinessTypes:D
            @i18n:Label (en="Value Date")
            @i18n:Tooltip (en="Indicates the Value date of the Contract")
            @t24:i (align=R, inputBehaviour=I, maxLength=11, sysNumber=10.0, core=true, t24Name=VALUE.DATE, mandatory=false)
/* Product variants can be defined and configured in the SY.PRODUCT.VARIANT application. Linking the product variant in this field will ensure that the corresponding parameters and configuration would be applied to this contract.
If this field is NULL, the parameters defined in SY.PRODUCT.DEFINTION for ACCUDECU would be applied.
No change field if SUPPRESS.UNDERLYING is set to 'No'.
Validation Rules:
Only variants with prefix as 'ACCUDECU_' will be accepted. */
        VARIANT -> SY_Config:SY_PRODUCT_VARIANT
            @i18n:Label (en=Variant)
            @i18n:Tooltip (en=Variant)
            @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=2.0, core=true, businessType=ANY, t24Name=VARIANT, mandatory=false)
    }
    SY_ACCU_DECU__BEN_ADD
    {
        /* This field will be mapped to SWIFT payment message (MT202) */
        BEN_ADD : T24BusinessTypes:A
            @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=169.0, core=true, t24Name=BEN.ADD, mandatory=false)
    }
    SY_ACCU_DECU__CPTY_ADD
    {
        /* This field will be mapped to SWIFT payment message (MT202) */
        CPTY_ADD : T24BusinessTypes:A
            @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=174.0, core=true, t24Name=CPTY.ADD, mandatory=false)
    }
    SY_ACCU_DECU__DATE_TIME
    {
        DATE_TIME : T24BusinessTypes:RELTIME
            @i18n:Label (en="Date time")
            @i18n:Tooltip (en="Date and time when record was input or authorised")
            @t24:i (align=L, inputBehaviour=N, maxLength=15, sysNumber=197.0, core=true, t24Name=DATE.TIME, mask="RDD DD  DD ##:##", mandatory=false)
    }
    SY_ACCU_DECU__FIXING_DATE
    {
/* Units are accrued on a daily basis and the accrued units are updated in this field. At the time of fixing, the value in this field would be units of shares that will be settled.
No change field if SUPPRESS.UNDERLYING is set to 'No'. */
        ACCRUED_UNITS1 : T24BusinessTypes:NOMAMT
            @i18n:Label (en="Accrued Units1")
            @i18n:Tooltip (en="Accrued Units1")
            @t24:i (align=R, inputBehaviour=I, maxLength=18, sysNumber=88.0, core=true, t24Name=ACCRUED.UNITS1, mandatory=false)
/* This field would be applicable for dual strike contracts. For such contracts the accrual can be at either the first strike price or the second strike price. This field can be used to store the accrual at the second strike price.
This field is for information purposes. */
        ACCRUED_UNITS2 : T24BusinessTypes:NOMAMT
            @i18n:Label (en="Accrued Units2")
            @i18n:Tooltip (en="Accrued Units2")
            @t24:i (align=R, inputBehaviour=I, maxLength=18, sysNumber=89.0, core=true, t24Name=ACCRUED.UNITS2, mandatory=false)
        CPTY_SETT_AMOUNT : T24BusinessTypes:AMT
            @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=96.0, core=true, t24Name=CPTY.SETT.AMOUNT, typeModifiers="-ï£»61ï£»D", mandatory=false)
        /* For cash settled contracts, the settlement payout would happen in the DELIVERY.CCY. If the delivery currency is different from the contract currency, the exchange rate between the delivery currency and the contract currency will default from the currency table and it can be amended. */
        DLV_EXCH_RATE : T24BusinessTypes:R
            @i18n:Label (en="Delivery Exchange Date")
            @i18n:Tooltip (en="Delivery Exchange Date")
            @t24:i (align=R, inputBehaviour=I, maxLength=15, sysNumber=94.0, core=true, t24Name=DLV.EXCH.RATE, mandatory=false)
/* This will hold the status of the current fixing period.
SUSPENDED - The fixing period is suspended.
FIXED - The fixing has happen successfully.
SUSP.FIXED - The fixing was suspended and then fixed. */
        FIXED_STATUS : T24BusinessTypes:A
            @t24:i (align=L, inputBehaviour=N, maxLength=10, sysNumber=90.0, core=true, t24Name=FIXED.STATUS, mandatory=false)
/* Based on the fixing frequency, a fixing schedule is generated between the value date and maturity date. Fixing date is the date on which the accrued units are settled.
The fields from FIXING.DATE to FIXED.STATUS are part of an associated multi value set of fields. There will be as many multi value sets as there are fixing periods. This will the Trade date in the SEC.TRADE transaction. */
        FIXING_DATE : T24BusinessTypes:D
            @i18n:Label (en="Fixing Date")
            @i18n:Tooltip (en="Fixing Date")
            @t24:i (align=R, inputBehaviour=I, maxLength=11, sysNumber=85.0, core=true, t24Name=FIXING.DATE, mandatory=false)
        /* This field holds the market price of the underlying equity at the time of fixing. This market price would be used calculate the cash settlement amount for cash settled contracts. */
        MARKET_PRICE : T24BusinessTypes:AMT
            @i18n:Label (en="Market Price")
            @i18n:Tooltip (en="Indicates the Market Price")
            @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=93.0, core=true, t24Name=MARKET.PRICE, mandatory=false)
/* Settlement amount will be settled in delivery currency. Settlement amount will be the difference between the strike price and market price times the accrued units. Settlement amount would be as below.
For Accumulators if the Market price is greater than stirke price then settlement amount is positive else it is negative.
For Decumulators if the Market price is greater than stirke price then settlement amount is negative else it is positive. */
        SETTLEMENT_AMOUNT : T24BusinessTypes:AMT
            @i18n:Label (en="Settlement Amount ")
            @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=95.0, core=true, t24Name=SETTLEMENT.AMOUNT, typeModifiers="-ï£»61ï£»D", mandatory=false)
        /* This will be the value date in the SEC.TRADE transaction generated for share settlement. This date will be defaulted based on the SETTLEMENT.DAYS defined in the STOCK.EXCHANGE */
        SETTLEMENT_DATE : T24BusinessTypes:D
            @i18n:Label (en="Settlement Date")
            @t24:i (align=R, inputBehaviour=I, maxLength=11, sysNumber=87.0, core=true, t24Name=SETTLEMENT.DATE, mandatory=false)
/* This field specifies the price at which the settlement  instrument will be transacted.  This is relevant, when the contract is settled through an alternate instrument such as a participatory note.
The field is mandatory when SETTLEMENT.METHOD is PHYSICAL and if SETTLMENT.INSTRUMENT is given. This will be part of the multi value set for each fixing. SEC.TRADE created as part of the fixing event would be created for this price. */
        SETT_INSTR_PRICE : T24BusinessTypes:AMT
            @i18n:Label (en="Sett Instrument Price ")
            @i18n:Tooltip (en="Settlement Instrument Price")
            @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=92.0, core=true, t24Name=SETT.INSTR.PRICE, mandatory=false)
/* This field specifies the number of units of settlement instrument which should be settled at the time of fixing. This is relevant, when the contract is settled through an alternate instrument such as a participatory note.
The field is mandatory when SETTLEMENT.METHOD is PHYSICAL and if SETTLMENT.INSTRUMENT is given. This field will be part of the fixing multi-value set. SEC.TRADE would be created for these many units. */
        SETT_INSTR_UNITS : T24BusinessTypes:NOMAMT
            @i18n:Label (en="Settlement Instruction Units")
            @i18n:Tooltip (en="Settlement Instruction Units")
            @t24:i (align=R, inputBehaviour=I, maxLength=18, sysNumber=91.0, core=true, t24Name=SETT.INSTR.UNITS, mandatory=false)
        /* This field will show the number of workings days in each fixing period. The number of working days are calculated using the holiday calendar of the STOCK.EXCHANGE */
        WORKING_DAYS : T24BusinessTypes:N
            @i18n:Label (en="Working Days")
            @i18n:Tooltip (en="Working Days")
            @t24:i (align=R, inputBehaviour=I, maxLength=3, sysNumber=86.0, core=true, t24Name=WORKING.DAYS, mandatory=false)
    }
    SY_ACCU_DECU__INPUTTER
    {
        INPUTTER : T24BusinessTypes:A
            @i18n:Label (en=Inputter)
            @i18n:Tooltip (en="The user who last updated the record")
            @t24:i (align=L, inputBehaviour=N, maxLength=100, sysNumber=196.0, core=true, t24Name=INPUTTER, mandatory=false)
    }
    SY_ACCU_DECU__INTR_ADD
    {
        /* This field will be mapped to SWIFT payment message (MT202) */
        INTR_ADD : T24BusinessTypes:A
            @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=172.0, core=true, t24Name=INTR.ADD, mandatory=false)
    }
    SY_ACCU_DECU__OVERRIDE
    {
        OVERRIDE : T24BusinessTypes:N
            @i18n:Label (en=Override)
            @i18n:Tooltip (en="Overrides generated by this transaction")
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=193.0, core=true, t24Name=OVERRIDE, mandatory=false)
    }
    SY_ACCU_DECU__SECURITY_POS
    {
        /* This field holds the number of  units of underlying that has to be blocked against the associated SECURITY.POS. */
        BLOCK_NOMINAL : T24BusinessTypes:NOMAMT
            @i18n:Label (en="Block Nominal")
            @i18n:Tooltip (en="Block Nominal")
            @t24:i (align=R, inputBehaviour=I, maxLength=18, sysNumber=34.0, core=true, t24Name=BLOCK.NOMINAL, mandatory=false)
        /* Once the block is created through the blocking application SC.BLOCK.SEC.POS, the block reference is updated in this field. */
        BLOCK_REF_SC : T24BusinessTypes:A
            @i18n:Label (en="Block Reference Account")
            @i18n:Tooltip (en="Block Reference Account")
            @t24:i (align=L, inputBehaviour=I, maxLength=16, sysNumber=36.0, core=true, t24Name=BLOCK.REF.SC, mandatory=false)
        /* This field will hold the end date of the security block. */
        BLOCK_UNTIL_SC : T24BusinessTypes:D
            @i18n:Label (en="Block Until Account")
            @i18n:Tooltip (en="Block Until Account")
            @t24:i (align=R, inputBehaviour=I, maxLength=11, sysNumber=35.0, core=true, t24Name=BLOCK.UNTIL.SC, mandatory=false)
/* For decumulator contracts, where the underlying  is sold at periodic intervals,  a security block needs to be placed to ensure that sufficient shares are available for sale.
This field will hold the SECURITY.POSITION ID which would be used to block the nominal defined in BLOCK.NOMINALS. Security block would be created using the blocking application SC.BLOCK.SEC.POS.
This is a multi value field as the security can be held in multiple depositories and the block could be across multiple position.
Once the SC.BLOCK.SEC.POS record is generated for the blocked position and if the ID of SC.BLOCK.SEC.POS is stored in BLOCK.REF.SC then the values in the current associative multivalued fields starting from SECURITY.POS to BLOCK.REF.SC cant be changed.
However multivalue can be expanded and new position can be blocked. */
        SECURITY_POS -> SC_ScoSecurityPositionUpdate:SECURITY_POSITION
            @i18n:Label (en="Security Position")
            @i18n:Tooltip (en="Security Position")
            @t24:i (align=L, inputBehaviour=I, maxLength=80, sysNumber=33.0, core=true, businessType=S, t24Name=SECURITY.POS, typeModifiers="ï£»9", mandatory=false)
        /* This field is used to store the pending nominals that are to be unblocked during each fixing of the contract. Technical use. */
        UNBLK_NOM_PEND : T24BusinessTypes:NOMAMT
            @t24:i (align=R, inputBehaviour=N, maxLength=18, sysNumber=37.0, core=true, t24Name=UNBLK.NOM.PEND, mandatory=false)
    }
    SY_ACCU_DECU__STMT_NOS
    {
        /* Standard T24 statement number field */
        STMT_NOS : T24BusinessTypes:N
            @i18n:Label (en="Stmt Nos")
            @i18n:Tooltip (en="Stmt Nos")
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=192.0, core=true, t24Name=STMT.NOS, mandatory=false)
    }
    SY_ACCU_DECU__UNWIND
    {
/* This field will store the unwinding charge amount credited to counterparty.
Unwinding charges entered in existing field UNWIND.CHG.AMT will be debited from customer and credited to PL/suspense category account. Charges entered in CPTY.UNWIND.CHG.AMT will be debited from PL/suspense category account and credited to the counterparty
This field is applicable only for agency booking model contracts. */
        CPTY_UNWIND_CHG_AMT : T24BusinessTypes:AMT
            @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=76.0, core=true, t24Name=CPTY.UNWIND.CHG.AMT, typeModifiers="-ï£»67.Xï£»D", mandatory=false)
        /* In case of partial unwinding, this field holds the reduced obligation. Accrual would happen for these many units,  from unwind effective date onwards. */
        NEW_DAILY_UNITS : T24BusinessTypes:NOMAMT
            @i18n:Label (en="New Daily Units")
            @i18n:Tooltip (en="New Daily Units")
            @t24:i (align=R, inputBehaviour=I, maxLength=18, sysNumber=74.0, core=true, t24Name=NEW.DAILY.UNITS, mandatory=false)
        /* Based on the reduced obligation in DAILY.UNITS,  total units for the remaining days is calculated and stored in this field. */
        NEW_TOTAL_UNITS : T24BusinessTypes:NOMAMT
            @i18n:Label (en="New Total Units")
            @i18n:Tooltip (en="New Total Units")
            @t24:i (align=R, inputBehaviour=N, maxLength=18, sysNumber=75.0, core=true, t24Name=NEW.TOTAL.UNITS, mandatory=false)
/* The fields from 'UNWIND' to 'NEW.TOTAL.UNITS' are part of a multi value set. The contract can be pre-closed or terminated before the maturity date. Early closure is also referred to as "Unwinding" of the contract.
A penalty charge (unwind charge) can also be applied for early termination.

Allowed values -
'YES' - Early termination is initiated, units from current fixing to last fixing period will be expired.
'FULL' - Units accrued in the current fixing will be exercised and the remaining units of the contract will be expired.
'PARTIAL' - The contract will be partially expire the lots considering the value in NEW.DAILY.UNITS.

In case of Partial Unwinding, the contract will continue with reduced obligations. (The field NEW.DAILY.UNITS will capture the reduced obligation). It is possible to do partial unwind more than once,  this can be achieved by multivaluing the unwind set of fields.
Validation Rules:
If this field holds the values FULL or YES, then the multivalue set cant be expanded further.
This field cant be set to YES or FULL, if KNOCK.OUT or NOVATION is set. */
        UNWIND : DP_Contract:SY_ACCU_DECU__UNWIND__UNWIND
            @i18n:Label (en=Unwind)
            @i18n:Tooltip (en=Unwind)
            @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=66.0, core=true, t24Name=UNWIND, mandatory=false)
        /* The customer account from which the unwinding charges would be collected will be specified in this field. The account should be in the currency specified in UNWIND.CHG.CCY. */
        UNWIND_CHG_ACC : T24BusinessTypes:ANT
            @i18n:Label (en="Unwind Charge Account")
            @i18n:Tooltip (en="Unwind Charge Account")
            @t24:i (align=L, inputBehaviour=I, maxLength=16, sysNumber=69.0, core=true, t24Name=UNWIND.CHG.ACC, mandatory=false)
        /* This field holds the amount of unwinding penalty on the street leg of the deal. */
        UNWIND_CHG_AMT : T24BusinessTypes:AMT
            @i18n:Label (en="Unwind Charge Amount")
            @i18n:Tooltip (en="Unwind Charge Amount")
            @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=68.0, core=true, t24Name=UNWIND.CHG.AMT, typeModifiers="-ï£»67.Xï£»D", mandatory=false)
        /* This field will record the currency in which unwind charge be collected. */
        UNWIND_CHG_CCY -> ST_CurrencyConfig:CURRENCY
            @i18n:Label (en="Unwind Charge Currency")
            @i18n:Tooltip (en="Unwind Charge Currency")
            @t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=67.0, core=true, businessType=CCY, t24Name=UNWIND.CHG.CCY, mandatory=false)
/* This field holds the effective date of unwinding. This date can be a back date, forward date or current date. This field needs to within the current fixing period, i.e., it cannot be earlier than the previous fixing date or later than the next fixing date.
Units would be accrued from the last fixing date to the unwind effective date based on the DAILY.UNITS,  post the unwind effective date, accrual would be for the NEW.DAILY.UNITS.
Defaults to the current system date. The unwind event would run on  this date. */
        UNWIND_EFF_DATE : T24BusinessTypes:D
            @i18n:Label (en="Unwind Effective Date")
            @i18n:Tooltip (en="Unwind Effective Date")
            @t24:i (align=R, inputBehaviour=I, maxLength=11, sysNumber=72.0, core=true, t24Name=UNWIND.EFF.DATE, mandatory=false)
        /* This field holds the bank's mark up on the unwinding penalty. */
        UNWIND_SPREAD : T24BusinessTypes:AMT
            @i18n:Label (en="Unwind Spread")
            @i18n:Tooltip (en="Unwind Spread")
            @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=70.0, core=true, t24Name=UNWIND.SPREAD, typeModifiers="-ï£»67.Xï£»D", mandatory=false)
        /* Once the unwind event runs , UNWIND.STATUS is updated as  'Processed'. Once the status is updated as 'Processed', the fields in this multivalue set cannot be amended. */
        UNWIND_STATUS : DP_Contract:SY_ACCU_DECU__UNWIND__UNWIND_STATUS
            @i18n:Label (en="Unwind Status")
            @i18n:Tooltip (en="Unwind Status")
            @t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=73.0, core=true, t24Name=UNWIND.STATUS, mandatory=false)
        /* This is the sum of  UNWIND.CHG.AMT and UNWIND.SPREAD and this will be actual penalty amount that will be charged to the customer. */
        UNWIND_TOT_CHARGE : T24BusinessTypes:AMT
            @i18n:Label (en="Unwind Total Charge")
            @i18n:Tooltip (en="Unwind Total Charge")
            @t24:i (align=R, inputBehaviour=N, maxLength=19, sysNumber=71.0, core=true, t24Name=UNWIND.TOT.CHARGE, typeModifiers="-ï£»67.Xï£»D", mandatory=false)
    }
    /* DSP deal capture application to get the required details from user to create a DSP product */
    SY_DSP
        @i18n:Description (en="")
        @t24:i (t24Name=SY.DSP, level=F, type=D, additionalInfo=NOH, allowedFunctions="A C D E H I L P Q R S", localApplication=true, localRefAllowed=false)
    {
        /* Customer account number to debit amount to fund underlying option premium */
        ACCOUNT_NO -> AC_AccountOpening:ACCOUNT required
            @i18n:Label (en=Account)
            @i18n:Tooltip (en="Indicates Customer Account Number")
            @t24:i (align=L, inputBehaviour=I, maxLength=36, sysNumber=7.0, core=true, businessType=ANT, t24Name=ACCOUNT.NO, mandatory=true)
        AUDITOR_CODE : T24BusinessTypes:A
            @i18n:Label (en="Auditor Code")
            @i18n:Tooltip (en="Auditor Code")
            @t24:i (align=L, inputBehaviour=E, maxLength=16, sysNumber=43.0, core=true, t24Name=AUDITOR.CODE, mandatory=false)
        AUDIT_DATE_TIME : T24BusinessTypes:RELTIME
            @i18n:Label (en="Audit Date Time")
            @i18n:Tooltip (en="Date and time when record was audited")
            @t24:i (align=L, inputBehaviour=E, maxLength=15, sysNumber=44.0, core=true, t24Name=AUDIT.DATE.TIME, mask="RDD DD  DD ##:##", mandatory=false)
        AUTHORISER : T24BusinessTypes:A
            @i18n:Label (en=Authoriser)
            @i18n:Tooltip (en="Indicates the User who Authorises the record")
            @t24:i (align=L, inputBehaviour=N, maxLength=100, sysNumber=40.0, core=true, t24Name=AUTHORISER, mandatory=false)
        /* Holds the valid broker defined in DX.CUSTOMER */
        COUNTERPARTY -> ST_Customer:CUSTOMER required
            @i18n:Label (en=Counterparty)
            @i18n:Tooltip (en="Counterparty with whom the deal is made")
            @t24:i (align=R, inputBehaviour=I, maxLength=10, sysNumber=4.0, core=true, businessType=CUS, t24Name=COUNTERPARTY, mandatory=true)
        CO_CODE -> ST_CompanyCreation:COMPANY
            @i18n:Label (en=Company)
            @t24:i (align=L, inputBehaviour=N, maxLength=11, sysNumber=41.0, core=true, businessType=A, t24Name=CO.CODE, mask="R##-###-####", mandatory=false)
        CURR_NO : T24BusinessTypes:N
            @i18n:Label (en="Curr No")
            @t24:i (align=R, inputBehaviour=N, maxLength=6, sysNumber=37.0, core=true, t24Name=CURR.NO, mandatory=false)
        /* Holds the valid CUSTOMER Id. The customer should also be defined in DX.CUSTOMER */
        CUSTOMER_NO -> ST_Customer:CUSTOMER required
            @i18n:Label (en="Customer No")
            @i18n:Tooltip (en="Identifies the Customer for the transaction.")
            @t24:i (align=R, inputBehaviour=I, maxLength=10, sysNumber=1.0, core=true, businessType=CUS, t24Name=CUSTOMER.NO, mandatory=true)
        /* Security units to be accrued daily */
        DAILY_UNITS : T24BusinessTypes:N required
            @i18n:Label (en="Daily Units")
            @t24:i (align=R, inputBehaviour=I, maxLength=10, sysNumber=10.0, core=true, t24Name=DAILY.UNITS, mandatory=true)
        DATE_TIME -> byValue DP_Contract:SY_DSP__DATE_TIME *
            @t24:i (t24Name=DATE.TIME)
        DEAL_NO -> DP_Contract:SY_DSP PK required
            @i18n:Label (en="Deal Number")
            @t24:i (align=L, inputBehaviour=I, maxLength=50, sysNumber=0.0, core=true, businessType=A, t24Name=DEAL.NO, mandatory=true)
/* Initial amount to fund the underlying option premium. The system calculates the total premium amount to generate the value in this field.

No input allowed.  System generated field only. */
        DEPOSIT_AMOUNT : T24BusinessTypes:AMT
            @i18n:Label (en="Deposit Amt")
            @t24:i (align=R, inputBehaviour=N, maxLength=18, sysNumber=5.0, core=true, t24Name=DEPOSIT.AMOUNT, typeModifiers="-ï£»USD", mandatory=false)
        DEPOSIT_CCY -> ST_CurrencyConfig:CURRENCY
            @i18n:Label (en="Deposit Ccy")
            @t24:i (align=L, inputBehaviour=N, maxLength=3, sysNumber=6.0, core=true, businessType=CCY, t24Name=DEPOSIT.CCY, mandatory=false)
        DEPT_CODE -> ST_Config:DEPT_ACCT_OFFICER
            @i18n:Label (en="Dept Code")
            @t24:i (align=R, inputBehaviour=N, maxLength=6, sysNumber=42.0, core=true, t24Name=DEPT.CODE, mandatory=false)
/* Holds a Valid DX.CONTRACT.MASTER record. It should have the same SECURITY.CODE of DSP as underlying.
Contract size should be multiples of daily units. */
        DX_CONTRACT_CODE -> DX_Configuration:DX_CONTRACT_MASTER
            @i18n:Label (en="Dx contract Code")
            @i18n:Tooltip (en="Indicates the counterparty of the transaction")
            @t24:i (align=L, inputBehaviour=I, maxLength=12, sysNumber=15.0, core=true, businessType=DXCM, t24Name=DX.CONTRACT.CODE, mandatory=false)
        INPUTTER -> byValue DP_Contract:SY_DSP__INPUTTER *
            @t24:i (t24Name=INPUTTER)
        /* Knockout price. knockout event would occur if the spot price is greater than knockout price. */
        KNOCKOUT_PRICE : T24BusinessTypes:AMT required
            @i18n:Label (en="Knockout Price")
            @i18n:Tooltip (en="Indicates the knockout price of the deal")
            @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=18.0, core=true, t24Name=KNOCKOUT.PRICE, typeModifiers="-ï£»USD", mandatory=true)
        LOTS_REQUIRED : T24BusinessTypes:N
            @i18n:Label (en="Lots Required")
            @i18n:Tooltip (en="Indicates the number of lots required")
            @t24:i (align=R, inputBehaviour=N, maxLength=14, sysNumber=24.0, core=true, t24Name=LOTS.REQUIRED, mandatory=false)
        /* Total units times of strike price. */
        NOTIONAL_AMT : T24BusinessTypes:AMT
            @i18n:Label (en="Notional Amount")
            @t24:i (align=R, inputBehaviour=N, maxLength=19, sysNumber=23.0, core=true, t24Name=NOTIONAL.AMT, typeModifiers="-ï£»USD", mandatory=false)
        OVERRIDE -> byValue DP_Contract:SY_DSP__OVERRIDE *
            @t24:i (t24Name=OVERRIDE)
        /* Holds the Valid SEC.ACC.MASTER for the given Customer. */
        PORTFOLIO_NO -> SC_ScoPortfolioMaintenance:SEC_ACC_MASTER required
            @i18n:Label (en="Portfoio No")
            @i18n:Tooltip (en="Indicates the Portfolio Account of the customer")
            @t24:i (align=L, inputBehaviour=I, maxLength=20, sysNumber=2.0, core=true, businessType=SAM, t24Name=PORTFOLIO.NO, mandatory=true)
        /* If PREMIUM.TYPE is Percentage, it is calculated with percentage of notional amount divided by total lots required. */
        PREMIUM : T24BusinessTypes:AMT required
            @i18n:Label (en=Premium)
            @i18n:Tooltip (en="Specifies the premium amount")
            @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=21.0, core=true, t24Name=PREMIUM, typeModifiers="-ï£»USD", mandatory=true)
        /* Mandatory if PREMIUM.TYPE is Percentage. It is the percentage of notional amount to calculate premium per lot. */
        PREMIUM_PERCENT : T24BusinessTypes:R
            @i18n:Label (en="Premium Percent")
            @i18n:Tooltip (en="Indicates the preimum percentage")
            @t24:i (align=R, inputBehaviour=I, maxLength=5, sysNumber=20.0, core=true, t24Name=PREMIUM.PERCENT, mandatory=false)
        /* Absolute or Percentage. If Percentage, PREMIUM.PERCENT is mandatory. */
        PREMIUM_TYPE : DP_Contract:SY_DSP__PREMIUM_TYPE required
            @i18n:Label (en="Premium Type")
            @i18n:Tooltip (en="Indicates the type of premium applicable")
            @t24:i (align=L, inputBehaviour=I, maxLength=10, sysNumber=19.0, core=true, t24Name=PREMIUM.TYPE, mandatory=true)
        RECORD_STATUS : T24BusinessTypes:STAT
            @i18n:Label (en="Record Status")
            @t24:i (align=L, inputBehaviour=N, maxLength=6, sysNumber=36.0, core=true, t24Name=RECORD.STATUS, mandatory=false)
        /* Reserved for future use. */
        RESERVED1 : T24BusinessTypes:AAA
            @t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=25.0, core=true, t24Name=RESERVED1, mandatory=false)
        /* Reserved for future use. */
        RESERVED10 : T24BusinessTypes:AAA
            @t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=34.0, core=true, t24Name=RESERVED10, mandatory=false)
        /* Reserved for future use. */
        RESERVED2 : T24BusinessTypes:AAA
            @t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=26.0, core=true, t24Name=RESERVED2, mandatory=false)
        /* Reserved for future use. */
        RESERVED3 : T24BusinessTypes:AAA
            @t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=27.0, core=true, t24Name=RESERVED3, mandatory=false)
        /* Reserved for future use. */
        RESERVED4 : T24BusinessTypes:AAA
            @t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=28.0, core=true, t24Name=RESERVED4, mandatory=false)
        /* Reserved for future use. */
        RESERVED5 : T24BusinessTypes:AAA
            @t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=29.0, core=true, t24Name=RESERVED5, mandatory=false)
        /* Reserved for future use. */
        RESERVED6 : T24BusinessTypes:AAA
            @t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=30.0, core=true, t24Name=RESERVED6, mandatory=false)
        /* Reserved for future use. */
        RESERVED7 : T24BusinessTypes:AAA
            @t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=31.0, core=true, t24Name=RESERVED7, mandatory=false)
        /* Reserved for future use. */
        RESERVED8 : T24BusinessTypes:AAA
            @t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=32.0, core=true, t24Name=RESERVED8, mandatory=false)
        /* Reserved for future use. */
        RESERVED9 : T24BusinessTypes:AAA
            @t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=33.0, core=true, t24Name=RESERVED9, mandatory=false)
        RESERVED_11 : T24BusinessTypes:AAA
            @t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=3.0, core=true, t24Name=RESERVED.11, mandatory=false)
        /* Security number to be accrued daily */
        SECURITY_CODE -> SC_ScoSecurityMasterMaintenance:SECURITY_MASTER required
            @i18n:Label (en="Security No")
            @i18n:Tooltip (en="Indicates a valid Security")
            @t24:i (align=L, inputBehaviour=I, maxLength=22, sysNumber=8.0, core=true, businessType=SEC, t24Name=SECURITY.CODE, mandatory=true)
        /* Spot price of the security */
        SPOT_PRICE : T24BusinessTypes:AMT
            @i18n:Label (en="Spot Price")
            @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=16.0, core=true, t24Name=SPOT.PRICE, typeModifiers="-ï£»USD", mandatory=false)
        /* Stock exchange of security */
        STOCK_EXCHANGE -> SC_Config:STOCK_EXCHANGE required
            @i18n:Label (en="Stock Exchange")
            @t24:i (align=L, inputBehaviour=I, maxLength=5, sysNumber=9.0, core=true, businessType=A, t24Name=STOCK.EXCHANGE, mandatory=true)
        /* Strike price at which the daily units of security is accrued if knockout event does not occur */
        STRIKE_PRICE : T24BusinessTypes:AMT required
            @i18n:Label (en=Strike)
            @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=17.0, core=true, t24Name=STRIKE.PRICE, typeModifiers="-ï£»USD", mandatory=true)
        /* Total number of business days from value date to termination date. */
        TENURE : T24BusinessTypes:N
            @i18n:Label (en=Tenure)
            @t24:i (align=R, inputBehaviour=N, maxLength=3, sysNumber=22.0, core=true, t24Name=TENURE, mandatory=false)
        /* Maturity date of the deal */
        TERMINATION_DATE : T24BusinessTypes:D required
            @i18n:Label (en="Termination Date")
            @t24:i (align=R, inputBehaviour=I, maxLength=11, sysNumber=14.0, core=true, t24Name=TERMINATION.DATE, mandatory=true)
        /* Total number of units to be accrued during tenure of product. */
        TOTAL_UNITS : T24BusinessTypes:N
            @i18n:Label (en="Total Units")
            @t24:i (align=R, inputBehaviour=N, maxLength=10, sysNumber=11.0, core=true, t24Name=TOTAL.UNITS, mandatory=false)
        /* Trade date of the deal */
        TRADE_DATE : T24BusinessTypes:D required
            @i18n:Label (en="Trade Date")
            @t24:i (align=R, inputBehaviour=I, maxLength=11, sysNumber=12.0, core=true, t24Name=TRADE.DATE, mandatory=true)
        /* Value date of the deal */
        VALUE_DATE : T24BusinessTypes:D required
            @i18n:Label (en="Value Date")
            @i18n:Tooltip (en="Indicates the Value date of the Contract")
            @t24:i (align=R, inputBehaviour=I, maxLength=11, sysNumber=13.0, core=true, t24Name=VALUE.DATE, mandatory=true)
    }
    SY_DSP__DATE_TIME
    {
        DATE_TIME : T24BusinessTypes:RELTIME
            @i18n:Label (en="Date time")
            @i18n:Tooltip (en="Date and time when record was input or authorised")
            @t24:i (align=L, inputBehaviour=N, maxLength=15, sysNumber=39.0, core=true, t24Name=DATE.TIME, mask="RDD DD  DD ##:##", mandatory=false)
    }
    SY_DSP__INPUTTER
    {
        INPUTTER : T24BusinessTypes:A
            @i18n:Label (en=Inputter)
            @i18n:Tooltip (en="The user who last updated the record")
            @t24:i (align=L, inputBehaviour=N, maxLength=100, sysNumber=38.0, core=true, t24Name=INPUTTER, mandatory=false)
    }
    SY_DSP__OVERRIDE
    {
        OVERRIDE : T24BusinessTypes:A
            @i18n:Label (en=Override)
            @i18n:Tooltip (en="Overrides generated by this transaction")
            @t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=35.0, core=true, t24Name=OVERRIDE, mandatory=false)
    }
}
Enumerations {
    SY_ACCU_DECU__BLOCK_FUNDS : mml:string
        BLOCK=BLOCK
        DEBIT=DEBIT
    SY_ACCU_DECU__CALC_SETTLE_AMT : mml:string
        NULL=NULL
        YES=YES
    SY_ACCU_DECU__CONTRACT_STATUS : mml:string
        ACTIVE=ACTIVE
        KNOCKOUT=KNOCKOUT
        MATURED=MATURED
        NOVATED=NOVATED
        UNWOUND=UNWOUND
    SY_ACCU_DECU__COUNTERPARTY_TRADE : mml:string
        NO=NO
        YES=YES
    SY_ACCU_DECU__COVERED_CONTRACT : mml:string
        FULLY_COVERED=FULLY.COVERED
        PARTIALLY_COVERED=PARTIALLY.COVERED
        UNCOVERED=UNCOVERED
    SY_ACCU_DECU__FIX_SUSPENSION : mml:string
        NO=NO
        YES=YES
    SY_ACCU_DECU__KNOCK_IN : mml:string
        NO=NO
        YES=YES
    SY_ACCU_DECU__KNOCK_OUT : mml:string
        NO=NO
        YES=YES
    SY_ACCU_DECU__MIN_PERIOD_KOUT : mml:string
        NO=NO
        YES=YES
    SY_ACCU_DECU__NOVATION : mml:string
        ExternalNovation=ExternalNovation
        InternalNovation=InternalNovation
    SY_ACCU_DECU__PREMIUM_PAY_RECEIVE : mml:string
        PAY=PAY
        RECEIVE=RECEIVE
    SY_ACCU_DECU__PRINCIPAL_AGENT : mml:string
        AGENT=AGENT
        PRINCIPAL=PRINCIPAL
    SY_ACCU_DECU__PRODUCT_TYPE : mml:string
        ACCUMULATOR=ACCUMULATOR
        DECUMULATOR=DECUMULATOR
    SY_ACCU_DECU__PYMT_MSG_REQD : mml:string
        NO=NO
        YES=YES
    SY_ACCU_DECU__RISK_LEVEL : mml:string
        1=1
        10=10
        2=2
        3=3
        4=4
        5=5
        6=6
        7=7
        8=8
        9=9
    SY_ACCU_DECU__SETTLEMENT_METHOD : mml:string
        CASH=CASH
        PHYSICAL=PHYSICAL
    SY_ACCU_DECU__SETTLEMENT_ROLE : mml:string
        AGENT=AGENT
        PRINCIPAL=PRINCIPAL
    SY_ACCU_DECU__SUPPRESS_UNDERLYING : mml:string
        NO=NO
        YES=YES
    SY_ACCU_DECU__SUSPEND_ACCRUAL : mml:string
        NO=NO
        YES=YES
    SY_ACCU_DECU__UNWIND__UNWIND : mml:string
        FULL=FULL
        PARTIAL=PARTIAL
        YES=YES
    SY_ACCU_DECU__UNWIND__UNWIND_STATUS : mml:string
        PROCESSED=PROCESSED
    SY_DSP__PREMIUM_TYPE : mml:string
        Absolute=Absolute
        Percentage=Percentage
}